type User {
	_id: String!
	name: String!
	imageUrl: String
	authProvider: String
	countryCode: String
	timeZone: String
	createdDate: String
	modifiedDate: String
	pollsCreated: [Poll]
	status: String
}

type Poll {
	_id: String!
	author: User
	question: String!
	options: [PollOption]
	comments: [PollComment]
	createdDate: String
	modifiedDate: String
}

type PollOption {
	text: String
	order: Int
	votes: Int
}

type PollComment {
	author: User
	text: String
}

input PollInput {
	question: String!
	options: [PollOptionInput]
}

input PollOptionInput {
	text: String
	order: Int
}

type Query {
	getTopPolls: [Poll]
	getTopTrendingPolls: [Poll]
	getUserProfile: [User]
}

type Response {
	success: Boolean
	message: String
	user: User
}

type Mutation {
	loginUser(accessToken: String): Response
	createPoll(pollInput: PollInput): Response
}
